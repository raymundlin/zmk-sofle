#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC    &kp N1            &kp N2        &kp N3          &kp N4  &kp N5     &kp UP_ARROW     &kp N6     &kp N7  &kp N8           &kp N9          &kp N0           &kp BACKSPACE
&kp GRAVE  &kp Q             &kp W         &kp E           &kp R   &kp T      &kp DOWN_ARROW   &kp Y      &kp U   &kp I            &kp O           &kp P            &kp UP_ARROW
&kp CAPS   &kp A             &kp S         &kp D           &kp F   &kp G      &kp LEFT_ARROW   &kp H      &kp J   &kp K            &kp L           &kp SEMI         &kp DOWN_ARROW
&kp LCTRL  &kp Z             &kp X         &kp C           &kp V   &kp B      &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA        &kp DOT         &kp SLASH        &kp ENTER
&to 1      &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_SHIFT  &mo 1   &kp TAB    &kp K_MUTE       &kp SPACE  &mo 2   &kp RIGHT_SHIFT  &kp LEFT_ARROW  &kp RIGHT_ARROW
            >;

            sensor-bindings = <&inc_dec_kp DOWN UP>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp F12  &kp F1           &kp F2           &kp F3        &kp F4     &kp F5           &mmv MOVE_UP     &kp F6     &kp F7         &kp F8     &kp F9            &kp F10            &kp F11
&trans   &kp PRINTSCREEN  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp INSERT       &mmv MOVE_DOWN   &kp GLOBE  &kp PG_UP      &kp UP     &msc SCRL_DOWN    &kp LEFT_BRACKET   &kp EQUAL
&trans   &kp SCROLLLOCK   &kp DOLLAR       &kp PERCENT   &kp CARET  &kp DELETE       &mmv MOVE_LEFT   &kp HOME   &kp LEFT       &kp DOWN   &kp RIGHT         &kp LEFT_BRACE     &kp MINUS
&trans   &kp PAUSE_BREAK  &kp AMPERSAND    &kp ASTERISK  &kp GRAVE  &kp TILDE        &mmv MOVE_RIGHT  &kp END    &kp PAGE_DOWN  &kp SPACE  &msc SCRL_UP      &kp UNDERSCORE     &trans
&to 0    &trans           &trans           &trans        &trans     &kp LA(SPACE)    &trans           &mkp LCLK  &mkp RCLK      &trans     &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            bindings = <
&out OUT_TOG     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &msc SCRL_UP     &kp F11           &kp F12            &kp F13               &kp F14                &kp F15          &kp LS(LC(LG(NUMBER_4)))
&rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0    &msc SCRL_DOWN   &kp BACKSLASH     &kp PIPE           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp KP_PLUS      &kp EQUAL
&rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &rgb_ug RGB_EFF    &msc SCRL_LEFT   &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp KP_MINUS     &kp MINUS
&rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &rgb_ug RGB_EFR    &msc SCRL_RIGHT  &kp SLASH         &kp QUESTION       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp UNDERSCORE   &rgb_ug RGB_TOG
&bt BT_CLR       &trans           &trans           &trans           &trans           &kp LG(TAB)        &trans           &kp K_MUTE        &trans             &trans                &rgb_ug RGB_SPD        &rgb_ug RGB_SPI
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
