#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1            &kp N2        &kp N3          &kp N4  &kp N5     &kp UP_ARROW     &kp N6     &kp N7  &kp N8           &kp N9     &kp N0     &kp BACKSPACE
&kp TAB     &kp Q             &kp W         &kp E           &kp R   &kp T      &kp DOWN_ARROW   &kp Y      &kp U   &kp I            &kp O      &kp P      &kp BSLH
&kp CAPS    &kp A             &kp S         &kp D           &kp F   &kp G      &kp LEFT_ARROW   &kp H      &kp J   &kp K            &kp L      &kp SEMI   &kp APOS
&kp LCTRL   &kp Z             &kp X         &kp C           &kp V   &kp B      &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA        &kp DOT    &kp FSLH   &kp ENTER
&kp K_MUTE  &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_SHIFT  &mo 1   &kp TAB    &kp SPACE        &kp SPACE  &mo 2   &kp RIGHT_SHIFT  &kp MINUS  &kp EQUAL
            >;

            sensor-bindings = <&inc_dec_kp DOWN UP>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp F12     &kp F1  &kp F2           &kp F3           &kp F4           &kp F5        &mmv MOVE_UP     &kp F6     &kp F7     &kp F8     &kp F9      &kp F10           &kp F11
&trans      &trans  &kp PRINTSCREEN  &kp SCROLLLOCK   &kp PAUSE_BREAK  &kp INSERT    &mmv MOVE_DOWN   &kp GLOBE  &kp PG_UP  &kp UP     &kp PG_DN   &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &trans  &kp AT_SIGN      &kp HASH         &kp PERCENT      &kp DELETE    &mmv MOVE_LEFT   &kp HOME   &kp LEFT   &kp DOWN   &kp RIGHT   &kp RS(A)         &trans
&trans      &trans  &trans           &kp EXCLAMATION  &kp QUESTION     &kp TILDE     &mmv MOVE_RIGHT  &kp END    &kp N0     &kp CARET  &kp DOLLAR  &mkp MB4          &mkp MB5
&kp K_MUTE  &trans  &trans           &trans           &trans           &trans        &mkp MCLK        &mkp LCLK  &mkp RCLK  &trans     &kp MINUS   &kp PLUS
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            bindings = <
&trans                 &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4    &msc SCRL_UP     &kp F11  &kp F12         &kp F13          &kp F14       &kp F15         &trans
&trans                 &out OUT_TOG     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS     &msc SCRL_DOWN   &trans   &trans          &trans           &trans        &kp LEFT_BRACE  &kp RIGHT_BRACE
&trans                 &bt BT_CLR       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS    &msc SCRL_LEFT   &trans   &kp CARET       &kp AMPERSAND    &kp ASTERISK  &trans          &trans
&trans                 &bt BT_CLR_ALL   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp TILDE       &msc SCRL_RIGHT  &trans   &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans        &trans          &trans
&kp C_BRIGHTNESS_AUTO  &kp KP_NUMBER_0  &trans           &trans           &trans           &trans          &trans           &trans   &trans          &trans           &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
